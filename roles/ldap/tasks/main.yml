- name: Create networks
  docker_network:
    name: "{{ item }}"
  loop:
    - ldap
    - traefik

- name: Create OpenLDAP container
  docker_container:
    state: started
    recreate: yes
    name: openldap
    image: osixia/openldap:latest
    hostname: openldap
    env:
      LDAP_ORGANISATION: "My Company"
      LDAP_DOMAIN: "my-company.com"
      LDAP_ADMIN_PASSWORD: "JonSn0w"
    volumes:
      - /tmp/slapd/database:/var/lib/ldap
      - /tmp/slapd/config:/etc/ldap/slapd.d
    networks:
      - name: ldap
    networks_cli_compatible: yes

- name: Create phpldapadmin container
  docker_container:
    state: started
    recreate: yes
    name: phpldapadmin
    image: osixia/phpldapadmin:latest
    hostname: openldap
    env:
      PHPLDAPADMIN_LDAP_HOSTS: openldap
    networks:
      - name: ldap
      - name: traefik
    networks_cli_compatible: yes
    ports:
      - 20443:443
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.entrypoints: "http"
      traefik.http.routers.portainer.rule: "Host(`contyn1`)"
      traefik.http.services.portainer.loadbalancer.server.port: "20443"
      traefik.docker.network: "traefik"

- name: create traefik folder and resources
  shell: |
    mkdir -p /opt/containers/traefik/data
    touch /opt/containers/traefik/data/acme.json
    chmod 600 /opt/containers/traefik/data/acme.json

- name: Traefik configuration file
  template:
    src: traefik.yml.j2
    dest: /opt/containers/traefik/data/traefik.yml

- name: Create traefik proxy container
  docker_container:
    state: started
    name: traefik
    image: traefik:latest
    hostname: traefik
    env:
      var: truc
    networks:
      - name: traefik
    networks_cli_compatible: yes
    ports:
      - 10080:80
      - 10443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/containers/traefik/data/traefik.yml:/traefik.yml:ro
      - /opt/containers/traefik/data/acme.json:/acme.json
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.entrypoints: http
      traefik.http.routers.traefik.rule: "Host(`contyn1`)"
      traefik.http.middlewares.traefik-auth.basicauth.users: "USER:PASSWORD"
      # traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme: https
      # traefik.http.routers.traefik.middlewares: traefik-https-redirect
      # traefik.http.routers.traefik-secure.entrypoints: https
      # traefik.http.routers.traefik-secure.rule: "Host(`traefik.example.com`)"
      # traefik.http.routers.traefik-secure.middlewares: traefik-auth
      # traefik.http.routers.traefik-secure.tls: "true"
      # traefik.http.routers.traefik-secure.tls.certresolver: http
      # traefik.http.routers.traefik-secure.service: api@internal

- name: Create traefik proxy container
  docker_container:
    state: started
    name: portainer
    hostname: portainer
    image: portainer/portainer:latest
    networks:
      - name: traefik
    networks_cli_compatible: yes
    ports:
      - 9000:9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /data:/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.entrypoints: "http"
      traefik.http.routers.portainer.rule: "Host(`portainer.example.com`)"
      # traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme: "https"
      # traefik.http.routers.portainer.middlewares: "portainer-https-redirect"
      # traefik.http.routers.portainer-secure.entrypoints: "https"
      # traefik.http.routers.portainer-secure.rule: "Host(`portainer.example.com`)"
      # traefik.http.routers.portainer-secure.tls: "true"
      # traefik.http.routers.portainer-secure.tls.certresolver: "http"
      # traefik.http.routers.portainer-secure.service: "portainer"
      traefik.http.services.portainer.loadbalancer.server.port: "9000"
      traefik.docker.network: "traefik"